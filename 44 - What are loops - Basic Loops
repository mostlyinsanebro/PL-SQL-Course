-- Basic Loops

-- Syntax
LOOP
  -- Our Code
    EXIT WHEN condn;
END LOOP;

-- If we do not give an exit condition, then our loop will be executed only once and not more than that.

-- Code
SET SERVEROUTPUT ON;
DECLARE
    v_counter NUMBER :=1;
BEGIN
    LOOP
        dbms_output.put_line(v_counter);
        v_counter := v_counter+1;
        EXIT;
    END LOOP;
END;

O/P:-
1
PL/SQL procedure successfully completed.


-- We can use exit in an if condition and write additional statements in if.
DECLARE
    v_counter NUMBER :=1;
BEGIN
    LOOP
        dbms_output.put_line(v_counter);
        v_counter := v_counter+1;
        IF v_counter = 10 THEN
            dbms_output.put_line('Maximum limit '||v_counter||' is reached');
            EXIT;
        END IF;
    END LOOP;
END;

O/P:-
1
2
3
4
5
6
7
8
9
Maximum limit 10 is reached
PL/SQL procedure successfully completed.





-- We can directly exit by gicing a condition to it as well.. standard approach
-- Code:-
DECLARE
    v_counter NUMBER :=0;
BEGIN
    LOOP
        v_counter := v_counter+1;
        dbms_output.put_line(v_counter);
        --IF v_counter = 10 THEN
          --  dbms_output.put_line('Maximum limit '||v_counter||' is reached');
          --  EXIT;
       -- END IF;
       EXIT WHEN v_counter = 10;
    END LOOP;
END;

O/P:-
1
2
3
4
5
6
7
8
9
10
PL/SQL procedure successfully completed.


